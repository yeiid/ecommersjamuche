import{w as p}from"./index.Bj88MMzq.js";import{s as l}from"./supabase.CIJy6KaJ.js";import{z as e}from"./client.schema.D9gTZs88.js";const m=e.object({name:e.string().min(1,"El nombre del producto es obligatorio"),price:e.number().int().positive("El precio debe ser un número positivo"),discountprice:e.number().int().nonnegative("El precio con descuento debe ser un número no negativo").optional().default(0),image:e.string().min(1,"La imagen del producto es obligatoria"),description:e.string().min(1,"La descripción del producto es obligatoria"),category:e.string().min(1,"La categoría del producto es obligatoria"),stock:e.number().int().nonnegative().optional().default(0),isnew:e.boolean().optional().default(!1),featured:e.boolean().optional().default(!1),rating:e.number().min(0).max(5).optional().default(0),features:e.array(e.string()).optional().default([]),ingredients:e.array(e.string()).optional().default([]),cuidados:e.string().optional(),dificultad:e.string().optional(),especieid:e.string().uuid("El ID de especie debe ser un UUID válido").optional()}),D=m;m.extend({id:e.string().uuid("El ID del producto debe ser un UUID válido"),created_at:e.string().datetime().optional(),updated_at:e.string().datetime().optional()});const _=m.partial(),w=e.object({id:e.string().uuid("El ID del producto debe ser un UUID válido")});function y(o){return D.parse(o)}function P(o){return _.parse(o)}function v(){return crypto.randomUUID()}function L(o,r=!0){return r&&!o.id&&(o.id=v()),r?y(o):P(o)}const I=e.object({nombre:e.string().min(1,"El nombre de la especie es obligatorio"),nombreCientifico:e.string().min(1,"El nombre científico es obligatorio"),familia:e.string().optional(),origen:e.string().optional(),descripcion:e.string().min(1,"La descripción de la especie es obligatoria"),propiedades:e.string().optional(),usos:e.string().optional(),imagen:e.string().min(1,"La imagen de la especie es obligatoria"),imagenDetalle:e.string().optional(),featured:e.boolean().optional().default(!1)});I.extend({id:e.string().uuid("El ID de la especie debe ser un UUID válido"),created_at:e.string().datetime().optional(),updated_at:e.string().datetime().optional()});I.partial();e.object({id:e.string().uuid("El ID de la especie debe ser un UUID válido")});const S=e.object({id:e.string().uuid("El ID del producto debe ser un UUID válido"),name:e.string().min(1,"El nombre del producto es obligatorio"),price:e.number().int().positive("El precio debe ser un número positivo"),discountprice:e.number().int().nonnegative().optional().default(0),quantity:e.number().int().positive("La cantidad debe ser un número positivo"),image:e.string().optional(),total:e.number().int().nonnegative()}),U=e.object({usuario_nombre:e.string().min(1,"El nombre del usuario es obligatorio"),usuario_email:e.string().email("El email debe tener un formato válido"),usuario_telefono:e.string().optional(),direccion:e.string().min(1,"La dirección es obligatoria"),ciudad:e.string().min(1,"La ciudad es obligatoria"),estado:e.string().min(1,"El estado/provincia es obligatorio"),codigo_postal:e.string().optional(),productos:e.array(S).min(1,"El pedido debe tener al menos un producto"),total:e.number().int().positive("El total debe ser un número positivo"),estado_pedido:e.string().optional().default("pendiente"),notas:e.string().optional()});U.extend({id:e.string().uuid("El ID del pedido debe ser un UUID válido"),fecha_pedido:e.string().datetime().optional(),fecha_envio:e.string().datetime().optional()});U.partial();e.object({id:e.string().uuid("El ID del pedido debe ser un UUID válido")});class d extends Error{constructor(r,a=null){super(r),this.name="DatabaseError",this.cause=a}}function f(o){return o?o.code==="23505"?{_error:"Ya existe un registro con esos datos"}:o.code==="23503"?{_error:"La referencia a otro registro no es válida"}:o.code==="22P02"?{_error:"Formato de UUID inválido"}:{_error:o.message||"Error en la operación con la base de datos"}:{_error:"Error desconocido"}}const u=p([]),b=p(!1),E=p("");async function x(){b.set(!0),E.set("");try{const{data:o,error:r}=await l.from("products").select("*, especies(*)");if(r)throw new d("Error al cargar productos",r);u.set(o||[])}catch(o){const r=o instanceof d?o.message:"Error al cargar los productos: "+o.message;E.set(r),console.error(r,o)}finally{b.set(!1)}}async function F(o){try{const r=!o.id,a=L(o,!r),{id:s,...g}=a;if(s){const{data:c,error:i}=await l.from("products").update(g).eq("id",s).select().single();if(i){const t=f(i);throw new d(t._error,i)}return u.update(t=>{const n=t.findIndex(h=>h.id===s);return n!==-1&&(t[n]=c),t}),c}else{const c={...g,id:v()},{data:i,error:t}=await l.from("products").insert(c).select().single();if(t){const n=f(t);throw new d(n._error,t)}return u.update(n=>[...n,i]),i}}catch(r){throw console.error("Error al guardar producto:",r),r}}async function $(o){try{w.parse({id:o});const{error:r}=await l.from("products").delete().eq("id",o);if(r)throw new d(`Error al eliminar producto ${o}`,r);return u.update(a=>a.filter(s=>s.id!==o)),!0}catch(r){return console.error(`Error al eliminar producto ${o}:`,r),!1}}x();export{$ as d,F as s};
