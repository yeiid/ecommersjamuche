---
import Layout from "../../layouts/Layout.astro";
import Button from "../../components/ui/Button.astro";
import ReviewForm from "../../components/ui/ReviewForm.astro";
import ReviewList from "../../components/ui/ReviewList.astro";

export async function getStaticPaths() {
  // En un caso real, estos datos vendrían de una API o CMS
  const products = [
    {
      id: "1",
      name: "Extracto de Cannabis",
      price: 85000,
      discountPrice: 75000,
      image:
        "https://images.unsplash.com/photo-1628542065089-1f1587564502?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80",
      images: [
        "https://images.unsplash.com/photo-1628542065089-1f1587564502?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80",
        "https://images.unsplash.com/photo-1579612830432-9967fea3ac22?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80",
        "https://images.unsplash.com/photo-1503262028195-93c528f03218?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80",
      ],
      description:
        "Extracto natural de cannabis con propiedades medicinales. Ideal para tratamientos terapéuticos. Contiene CBD de alta calidad que proporciona alivio para diversas condiciones.",
      longDescription: `
        <p>Este extracto de cannabis es un producto premium elaborado con las mejores plantas cultivadas de manera orgánica. Cada lote se somete a rigurosos controles de calidad para garantizar la pureza y potencia.</p>
        <p>Beneficios principales:</p>
        <ul>
          <li>Alivio del dolor crónico</li>
          <li>Reducción de la ansiedad y el estrés</li>
          <li>Mejora de la calidad del sueño</li>
          <li>Propiedades antiinflamatorias</li>
          <li>100% natural y orgánico</li>
        </ul>
        <p>Modo de uso: Aplicar 2-3 gotas bajo la lengua y mantener durante 60 segundos antes de tragar. Iniciar con dosis bajas e ir aumentando gradualmente según necesidad.</p>
        <p>Contenido: 30ml (aproximadamente 600 gotas)</p>
      `,
      rating: 4.5,
      category: "extractos",
      isNew: true,
      isFeatured: true,
      stock: 15,
      specifications: [
        { name: "Contenido", value: "30ml" },
        { name: "Concentración CBD", value: "10%" },
        { name: "THC", value: "<0.2%" },
        { name: "Origen", value: "Colombia" },
        { name: "Método de extracción", value: "CO2" },
      ],
    },
    {
      id: "2",
      name: "Semillas de Marihuana",
      price: 45000,
      discountPrice: 0,
      image:
        "https://images.unsplash.com/photo-1616407746534-a58befda7d83?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80",
      images: [
        "https://images.unsplash.com/photo-1616407746534-a58befda7d83?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80",
        "https://images.unsplash.com/photo-1543156632-dc21c84b271e?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80",
        "https://images.unsplash.com/photo-1585516471814-34719467fddb?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80",
      ],
      description:
        "Pack de semillas orgánicas de marihuana para cultivo personal.",
      longDescription: `
        <p>Nuestras semillas de marihuana están genéticamente seleccionadas para ofrecer plantas robustas con alto rendimiento. Cada paquete contiene 5 semillas feminizadas de la variedad Sativa, perfectas para cultivo interior o exterior.</p>
        <p>Características principales:</p>
        <ul>
          <li>Genética estable y probada</li>
          <li>Altos niveles de CBD</li>
          <li>Feminizadas (99% de probabilidad)</li>
          <li>Resistentes a plagas comunes</li>
          <li>Tiempo de floración: 8-10 semanas</li>
        </ul>
        <p>Estas semillas son ideales tanto para cultivadores principiantes como experimentados. Vienen en un empaque hermético que garantiza su frescura y viabilidad.</p>
        <p>Nota legal: Estas semillas se venden como producto coleccionable y para conservación genética. Consulta la normativa local antes de germinar.</p>
      `,
      rating: 5,
      category: "semillas",
      isNew: false,
      isFeatured: true,
      stock: 50,
      specifications: [
        { name: "Cantidad", value: "5 semillas" },
        { name: "Tipo", value: "Feminizadas" },
        { name: "Variedad", value: "Sativa" },
        { name: "Floración", value: "8-10 semanas" },
        { name: "Altura", value: "150-180cm" },
      ],
    },
    {
      id: "3",
      name: "Planta de Cannabis Medicinal",
      price: 120000,
      discountPrice: 99000,
      image:
        "https://images.unsplash.com/photo-1536689318884-51b09dfe7e74?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80",
      images: [
        "https://images.unsplash.com/photo-1536689318884-51b09dfe7e74?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80",
        "https://images.unsplash.com/photo-1536767472578-992f1637421c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80",
        "https://images.unsplash.com/photo-1603909223429-69bb7209c90d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80",
      ],
      description: "Planta viva de cannabis medicinal lista para trasplantar.",
      longDescription: `
        <p>Esta planta de cannabis medicinal viene en una maceta biodegradable de 15cm y está lista para ser trasplantada a su ubicación final. La variedad seleccionada es rica en CBD con bajo contenido de THC, ideal para uso medicinal.</p>
        <p>Características de la planta:</p>
        <ul>
          <li>Edad: 4 semanas</li>
          <li>Altura actual: 25-30cm</li>
          <li>Variedad: CBD Therapy (medicinal)</li>
          <li>Genética: Predominantemente indica</li>
          <li>Contenido de CBD: Alto</li>
          <li>Contenido de THC: Bajo (<0.5%)</li>
        </ul>
        <p>Cada planta viene con una guía de cuidados completa para maximizar su desarrollo y producción. Recomendamos trasplantarla a una maceta de al menos 7 galones para su desarrollo óptimo.</p>
        <p>Nota: El envío incluye medidas especiales para garantizar que la planta llegue en perfecto estado.</p>
      `,
      rating: 4,
      category: "plantas",
      isNew: true,
      isFeatured: false,
      stock: 8,
      specifications: [
        { name: "Edad", value: "4 semanas" },
        { name: "Altura", value: "25-30cm" },
        { name: "Variedad", value: "CBD Therapy" },
        { name: "Genética", value: "Indica dominante" },
        { name: "Maceta", value: "15cm biodegradable" },
      ],
    },
  ];

  return products.map((product) => {
    return {
      params: { id: product.id },
      props: { product },
    };
  });
}

// Recibir el producto como prop
const { product } = Astro.props;

// Formatear precios en pesos colombianos
const formatPrice = (price: number) => {
  return new Intl.NumberFormat("es-CO", {
    style: "currency",
    currency: "COP",
    minimumFractionDigits: 0,
  }).format(price);
};

// Calcular si hay descuento y cuánto es
const hasDiscount = product.discountPrice > 0;
const discountPercentage = hasDiscount
  ? Math.round(((product.price - product.discountPrice) / product.price) * 100)
  : 0;

const formattedPrice = formatPrice(product.price);
const formattedDiscountPrice = hasDiscount
  ? formatPrice(product.discountPrice)
  : "";

// Convertir el rating a un número de estrellas (máximo 5)
const stars = Math.min(Math.max(Math.round(product.rating), 0), 5);
---

<Layout title={`${product.name} | JAMUCHEE`}>
  <div class="container mx-auto px-4 py-12">
    <!-- Breadcrumb -->
    <nav class="flex mb-8 text-sm">
      <a
        href="/"
        class="text-gray-500 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400"
        >Inicio</a
      >
      <span class="mx-2 text-gray-500 dark:text-gray-400">/</span>
      <a
        href="/productos"
        class="text-gray-500 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400"
        >Productos</a
      >
      <span class="mx-2 text-gray-500 dark:text-gray-400">/</span>
      <span class="text-gray-800 dark:text-gray-200">{product.name}</span>
    </nav>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
      <!-- Galería de imágenes -->
      <div>
        <div class="mb-4 relative">
          <img
            id="main-image"
            src={product.images[0]}
            alt={product.name}
            class="w-full h-96 object-cover rounded-lg"
          />

          <!-- Botón de lista de deseos -->
          <button
            id="wishlist-btn"
            class="absolute top-4 right-4 bg-white dark:bg-gray-900 p-2 rounded-full shadow-md hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors"
            aria-label="Añadir a lista de deseos"
            data-product-id={product.id}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="wishlist-icon text-gray-500 dark:text-gray-400"
            >
              <path
                d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"
              ></path>
            </svg>
          </button>
        </div>

        <div class="grid grid-cols-3 gap-3">
          {
            product.images.map((image, index) => (
              <button
                class="thumbnail-button border-2 rounded overflow-hidden hover:opacity-80 transition-opacity cursor-pointer"
                class:list={[
                  index === 0 ? "border-primary-500" : "border-transparent",
                ]}
                data-index={index}
              >
                <img src={image} alt="" class="w-full h-24 object-cover" />
              </button>
            ))
          }
        </div>
      </div>

      <!-- Información del producto -->
      <div>
        <h1 class="text-3xl font-bold text-gray-800 dark:text-white mb-2">
          {product.name}
        </h1>

        <div class="flex items-center mb-4">
          <div class="flex">
            {
              [...Array(5)].map((_, index) => (
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class={`h-5 w-5 ${
                    index < stars
                      ? "text-yellow-400"
                      : "text-gray-300 dark:text-gray-600"
                  }`}
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                </svg>
              ))
            }
          </div>
          <span class="ml-2 text-gray-600 dark:text-gray-400">
            <span id="avg-rating">{product.rating.toFixed(1)}</span>/5 ({
              product.stock
            } en stock)
          </span>
        </div>

        <div class="mb-6">
          {
            hasDiscount ? (
              <div class="flex items-center">
                <span class="text-gray-500 dark:text-gray-400 line-through text-lg">
                  {formattedPrice}
                </span>
                <span class="ml-2 text-3xl font-bold text-gray-800 dark:text-white">
                  {formattedDiscountPrice}
                </span>
                <span class="ml-2 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded">
                  {discountPercentage}% OFF
                </span>
              </div>
            ) : (
              <span class="text-3xl font-bold text-gray-800 dark:text-white">
                {formattedPrice}
              </span>
            )
          }
          <p class="text-gray-600 dark:text-gray-400 text-sm mt-1">
            Impuestos incluidos. Envío calculado al finalizar la compra.
          </p>
        </div>

        <div class="mb-6">
          <h2 class="text-lg font-semibold text-gray-800 dark:text-white mb-2">
            Descripción
          </h2>
          <p class="text-gray-700 dark:text-gray-300">{product.description}</p>
        </div>

        <div class="mb-6">
          <div class="flex space-x-4">
            <div>
              <label
                for="quantity"
                class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"
              >
                Cantidad
              </label>
              <div class="custom-number-input h-10 w-32">
                <div
                  class="flex flex-row h-full w-full rounded-lg relative bg-transparent"
                >
                  <button
                    id="decrement"
                    class="bg-gray-200 dark:bg-gray-700 text-gray-600 dark:text-gray-400 hover:bg-gray-300 dark:hover:bg-gray-600 h-full w-10 rounded-l-lg flex items-center justify-center"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      class="h-4 w-4"
                      fill="none"
                      viewBox="0 0 24 24"
                      stroke="currentColor"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M20 12H4"></path>
                    </svg>
                  </button>
                  <input
                    type="number"
                    id="quantity"
                    class="outline-none focus:outline-none text-center w-full bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 font-semibold text-md hover:text-black dark:hover:text-white focus:text-black dark:focus:text-white md:text-base"
                    name="quantity"
                    value="1"
                    min="1"
                    max={product.stock}
                  />
                  <button
                    id="increment"
                    class="bg-gray-200 dark:bg-gray-700 text-gray-600 dark:text-gray-400 hover:bg-gray-300 dark:hover:bg-gray-600 h-full w-10 rounded-r-lg flex items-center justify-center"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      class="h-4 w-4"
                      fill="none"
                      viewBox="0 0 24 24"
                      stroke="currentColor"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M12 4v16m8-8H4"></path>
                    </svg>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="flex space-x-4 mb-8">
          <Button
            id="add-to-cart"
            class="flex-grow"
            variant="primary"
            size="lg"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5 mr-2"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z"
              ></path>
            </svg>
            Añadir al carrito
          </Button>
        </div>

        <div class="border-t border-gray-200 dark:border-gray-700 pt-6">
          <h2 class="text-lg font-semibold text-gray-800 dark:text-white mb-4">
            Especificaciones
          </h2>
          <dl class="grid grid-cols-1 gap-x-4 gap-y-2 sm:grid-cols-2">
            {
              product.specifications.map((spec) => (
                <div class="sm:col-span-1">
                  <dt class="text-sm font-medium text-gray-500 dark:text-gray-400">
                    {spec.name}
                  </dt>
                  <dd class="mt-1 text-sm text-gray-900 dark:text-gray-100">
                    {spec.value}
                  </dd>
                </div>
              ))
            }
          </dl>
        </div>
      </div>
    </div>

    <!-- Descripción larga -->
    <div class="mt-16">
      <h2 class="text-2xl font-semibold mb-6 text-gray-800 dark:text-white">
        Información detallada
      </h2>
      <div
        class="prose prose-lg max-w-none text-gray-700 dark:text-gray-300"
        set:html={product.longDescription}
      />
    </div>

    <!-- Sección de reseñas -->
    <div
      class="mt-16 grid grid-cols-1 lg:grid-cols-3 gap-8"
      id="review-section"
      data-product-id={product.id}
    >
      <div class="lg:col-span-2">
        <ReviewList productId={product.id} />
      </div>
      <div class="lg:col-span-1">
        <ReviewForm productId={product.id} />
      </div>
    </div>

    <!-- Productos relacionados - se implementará en una futura actualización -->
    <div class="mt-16">
      <h2 class="text-2xl font-semibold mb-6 text-gray-800 dark:text-white">
        También te puede interesar
      </h2>
      <p class="text-center text-gray-500 dark:text-gray-400 py-8">
        Próximamente podrás ver recomendaciones personalizadas.
      </p>
    </div>
  </div>
</Layout>

<script>
  import { addToCart, ensureCartInitialized } from "../../stores/cartStore";
  import {
    addToWishlist,
    removeFromWishlist,
    isInWishlist,
  } from "../../stores/wishlistStore";

  document.addEventListener("DOMContentLoaded", () => {
    // Asegurar que el carrito está inicializado
    ensureCartInitialized();

    // Galería de imágenes
    const mainImage = document.getElementById("main-image") as HTMLImageElement;
    const thumbnails = document.querySelectorAll(".thumbnail-button");

    thumbnails.forEach((thumbnail) => {
      thumbnail.addEventListener("click", () => {
        // Actualizar la imagen principal
        const index = parseInt(thumbnail.getAttribute("data-index") || "0", 10);
        const images = [
          // @ts-ignore
          ...Array.from(document.querySelectorAll(".thumbnail-button img")),
        ].map((img) => img.getAttribute("src"));
        if (mainImage) mainImage.src = images[index] || mainImage.src;

        // Actualizar el borde de la miniatura activa
        thumbnails.forEach((t) => {
          t.classList.remove("border-primary-500");
          t.classList.add("border-transparent");
        });
        thumbnail.classList.remove("border-transparent");
        thumbnail.classList.add("border-primary-500");
      });
    });

    // Control de cantidad
    const quantityInput = document.getElementById(
      "quantity"
    ) as HTMLInputElement;
    const incrementButton = document.getElementById("increment");
    const decrementButton = document.getElementById("decrement");

    if (incrementButton && quantityInput) {
      incrementButton.addEventListener("click", () => {
        const currentValue = parseInt(quantityInput.value, 10);
        const maxValue = parseInt(quantityInput.max, 10);
        if (currentValue < maxValue) {
          quantityInput.value = (currentValue + 1).toString();
        }
      });
    }

    if (decrementButton && quantityInput) {
      decrementButton.addEventListener("click", () => {
        const currentValue = parseInt(quantityInput.value, 10);
        if (currentValue > 1) {
          quantityInput.value = (currentValue - 1).toString();
        }
      });
    }

    // Botón de añadir al carrito
    const addToCartButton = document.getElementById("add-to-cart");
    if (addToCartButton) {
      addToCartButton.addEventListener("click", () => {
        // Asegurar nuevamente que el carrito está inicializado
        ensureCartInitialized();

        const productId = new URL(window.location.href).pathname
          .split("/")
          .pop();
        const quantity = parseInt(
          (document.getElementById("quantity") as HTMLInputElement)?.value ||
            "1",
          10
        );

        if (productId) {
          // Obtener información del producto
          const name = document.querySelector("h1")?.textContent?.trim() || "";
          const image = (
            document.getElementById("main-image") as HTMLImageElement
          )?.src;
          const priceText =
            document
              .querySelector(".text-3xl.font-bold")
              ?.textContent?.trim() || "0";
          const description =
            document.querySelector("div.mb-6 p")?.textContent?.trim() || "";

          // Extraer el precio numérico del texto formateado
          const price = parseInt(priceText.replace(/\D/g, ""), 10);

          if (name && image && !isNaN(price)) {
            // Añadir al carrito
            const success = addToCart({
              id: productId,
              name,
              price,
              image,
              description,
              quantity: quantity, // Pasar la cantidad completa de una vez
            });

            // Feedback visual
            const originalText = addToCartButton.textContent;
            addToCartButton.innerHTML = success
              ? `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                </svg>
                Añadido al carrito`
              : `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                </svg>
                Error al añadir`;

            setTimeout(() => {
              if (addToCartButton && originalText) {
                addToCartButton.innerHTML = originalText;
              }
            }, 2000);
          }
        }
      });
    }

    // Gestionar la lista de deseos
    const wishlistButton = document.getElementById("wishlist-btn");

    // Función para actualizar el estado visual del botón de lista de deseos
    const updateWishlistButtonState = (
      button: HTMLElement,
      inWishlist: boolean
    ) => {
      const icon = button.querySelector(".wishlist-icon");
      if (!icon) return;

      if (inWishlist) {
        icon.classList.add("text-red-500");
        icon.classList.remove("text-gray-500", "dark:text-gray-400");
        // Cambiar el SVG a relleno completo
        icon.setAttribute("fill", "currentColor");
      } else {
        icon.classList.remove("text-red-500");
        icon.classList.add("text-gray-500", "dark:text-gray-400");
        // Cambiar el SVG a contorno
        icon.setAttribute("fill", "none");
      }
    };

    if (wishlistButton) {
      const productId = wishlistButton.getAttribute("data-product-id");
      if (productId) {
        // Comprobar estado inicial
        const inWishlist = isInWishlist(productId);
        updateWishlistButtonState(wishlistButton, inWishlist);

        // Añadir event listener
        wishlistButton.addEventListener("click", () => {
          const name = document.querySelector("h1")?.textContent?.trim() || "";
          const image = (
            document.getElementById("main-image") as HTMLImageElement
          )?.src;
          const priceText =
            document
              .querySelector(".text-3xl.font-bold")
              ?.textContent?.trim() || "0";
          const description =
            document.querySelector("div.mb-6 p")?.textContent?.trim() || "";

          // Extraer el precio numérico del texto formateado
          const price = parseInt(priceText.replace(/\D/g, ""), 10);

          if (productId && name && image && !isNaN(price)) {
            // Verificar si ya está en la lista de deseos
            const isInList = isInWishlist(productId);

            if (isInList) {
              removeFromWishlist(productId);
              updateWishlistButtonState(wishlistButton, false);
            } else {
              addToWishlist({
                id: productId,
                name,
                price,
                image,
                description,
              });
              updateWishlistButtonState(wishlistButton, true);
            }
          }
        });
      }
    }
  });
</script>
