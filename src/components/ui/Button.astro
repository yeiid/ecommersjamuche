---
interface Props {
  variant?: "primary" | "secondary" | "accent" | "outline" | "link";
  size?: "sm" | "md" | "lg";
  fullWidth?: boolean;
  disabled?: boolean;
  type?: "button" | "submit" | "reset";
  href?: string;
  ariaLabel?: string;
  id?: string;
  class?: string;
  [key: string]: any; // Para permitir otros atributos como data-*
}

const {
  variant = "primary",
  size = "md",
  fullWidth = false,
  disabled = false,
  type = "button",
  href,
  ariaLabel,
  id,
  class: className = "",
  ...rest
} = Astro.props;

// Determinar las clases base
const baseClasses =
  "inline-flex items-center justify-center font-medium transition-all duration-200 focus-ring";

// Variantes
const variantClasses = {
  primary:
    "bg-primary-600 text-white hover:bg-primary-700 active:bg-primary-800",
  secondary:
    "bg-gray-100 text-gray-900 hover:bg-gray-200 active:bg-gray-300 dark:bg-gray-800 dark:text-gray-100 dark:hover:bg-gray-700 dark:active:bg-gray-600",
  accent: "bg-accent-500 text-white hover:bg-accent-600 active:bg-accent-700",
  outline:
    "border border-gray-300 dark:border-gray-700 bg-transparent text-gray-900 dark:text-gray-100 hover:bg-gray-100 dark:hover:bg-gray-800 active:bg-gray-200 dark:active:bg-gray-700",
  link: "bg-transparent text-primary-600 dark:text-primary-400 hover:underline hover:bg-transparent p-0",
};

// Tamaños
const sizeClasses = {
  sm: "text-xs px-2.5 py-1.5 rounded-md",
  md: "text-sm px-4 py-2 rounded-md",
  lg: "text-base px-6 py-3 rounded-md",
};

// Estados
const stateClasses = {
  disabled: "opacity-50 cursor-not-allowed pointer-events-none",
  fullWidth: "w-full",
};

// Construir la clase completa
const classes = [
  baseClasses,
  variantClasses[variant],
  sizeClasses[size],
  fullWidth ? stateClasses.fullWidth : "",
  disabled ? stateClasses.disabled : "",
  className,
]
  .filter(Boolean)
  .join(" ");

// Determinar el elemento a renderizar
const Element = href ? "a" : "button";

// Atributos adicionales
const attrs = {
  ...(href ? { href } : { type }),
  disabled: href ? undefined : disabled,
  "aria-label": ariaLabel,
  id,
  class: classes,
  ...rest,
};
---

<Element {...attrs}>
  <slot />
</Element>

<style>
  /* Efecto de pulsación */
  button:not(:disabled):active,
  a:active {
    transform: translateY(1px);
  }
</style>

